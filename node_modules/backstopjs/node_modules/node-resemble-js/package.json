{
  "name": "node-resemble-js",
  "version": "0.1.1",
  "description": "Image analysis and comparison for nodejs",
  "main": "resemble.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lksv/node-resemble.js.git"
  },
  "keywords": [
    "comparison",
    "image",
    "diff",
    "compare"
  ],
  "author": {
    "name": "Lukas Svoboda",
    "email": "lukas.svoboda@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lksv/node-resemble.js/issues"
  },
  "homepage": "https://github.com/lksv/node-resemble.js",
  "dependencies": {
    "pngjs": "~2.2.0",
    "jpeg-js": "0.2.0"
  },
  "devDependencies": {
    "gulp": "3.9.0",
    "gulp-jasmine": "2.2.1",
    "gulp-util": "3.0.7"
  },
  "readme": "node-resebmle.js\n================\n\nAnalyse and compare images with Javascript. This project does not need canvas or any other binary denpendencies.\nIt is a modification of [Resemble.js](https://github.com/Huddle/Resemble.js)\n\n\n### Get it\n\n`npm install node-resemble-js`\n\n### Example\n\nRetrieve basic analysis on image.\n\n```javascript\nvar api = resemble(fileData).onComplete(function(data){\n\tconsole.log(data);\n\t/*\n\t{\n\t  red: 255,\n\t  green: 255,\n\t  blue: 255,\n\t  brightness: 255\n\t}\n\t*/\n});\n```\n\nUse resemble to compare two images.\n\n```javascript\nvar diff = resemble(file).compareTo(file2).ignoreColors().onComplete(function(data){\n\tconsole.log(data);\n\t/*\n\t{\n\t  misMatchPercentage : 100, // %\n\t  isSameDimensions: true, // or false\n\t  dimensionDifference: { width: 0, height: -1 }, // defined if dimensions are not the same\n\t  getImageDataUrl: function(){}\n\t}\n\t*/\n});\n```\n\nYou can also change the comparison method after the first analysis.\n\n```javascript\n// diff.ignoreNothing();\n// diff.ignoreColors();\ndiff.ignoreAntialiasing();\n```\n\nAnd change the output display style.\n\n```javascript\nresemble.outputSettings({\n  errorColor: {\n    red: 255,\n    green: 0,\n    blue: 255\n  },\n  errorType: 'movement',\n  transparency: 0.3\n});\n// resembleControl.repaint();\n```\n\n--------------------------------------\n## Example usuage (in cucumber step definition)\n\n\n     this.Then(/^Screenshot should match image \"(.*)\"$/, function (image, callback) {\n        browser.takeScreenshot().then(function(pngString) {\n          var screenshot = new Buffer(pngString, 'base64');\n     \n          resemble(image)\n            .compareTo(screenshot)\n            .onComplete(function(data){\n     \n              if (Number(data.misMatchPercentage) <= 0.01) {\n                callback();\n              } else {\n                data.getDiffImage().pack().pipe(fs.createWriteStream(image + 'diff.png'));\n                callback.fail(new Error(\"Screenshot '\" + image+  \"' differ \" + data.misMatchPercentage + \"%\"));\n              }\n            });\n        });\n      })\n\n--------------------------------------\n\nCredits:\n * Created by [James Cryer](http://github.com/jamescryer) and the Huddle development team.\n * [Lukas Svoboda](http://github.com/lksv) - modification for node.js\n",
  "readmeFilename": "README.md",
  "_id": "node-resemble-js@0.1.1",
  "_from": "node-resemble-js@^0.1.1"
}
